
##
# jupyterhub websocket config
##
# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# redirect to https
server {
	listen *:80;
	server_name bmeg-jupyter.ddns.net;
	return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name bmeg-jupyter.ddns.net;
  ssl_certificate /etc/letsencrypt/live/bmeg-jupyter.ddns.net/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/bmeg-jupyter.ddns.net/privkey.pem;


	# Managing literal requests to the JupyterHub front end
	location / {
			proxy_pass http://jupyterhub:8000;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

			# websocket headers
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
	}
  # cadvisor - unauthorized unless a jupyterhub-session-id exists
  location /cadvisor/ {
    if ($http_cookie !~ "_xsrf" ) {
      return 403;
    }
    proxy_pass http://cadvisor:8080/;
    proxy_redirect ~^/containers/ /cadvisor/containers/;
    proxy_redirect ~^/docker/ /cadvisor/docker/;
    proxy_redirect ~^/metrics/ /cadvisor/metrics/;
	}
  # for certbot challenge
  location /.well-known/acme-challenge/ {
      root /var/www/certbot;
  }
}
